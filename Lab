--== GXScript Hub (Elegant Neon) ==--

-- Clean previous
pcall(function() if game.CoreGui:FindFirstChild("GXScriptHub") then game.CoreGui.GXScriptHub:Destroy() end end)

-- Services / refs
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local LP = Players.LocalPlayer

-- Theme
local ACCENT = Color3.fromRGB(40, 220, 120)
local ACCENT_DARK = Color3.fromRGB(20, 130, 80)
local BG = Color3.fromRGB(16, 16, 16)
local BG_SOFT = Color3.fromRGB(24, 24, 24)
local TEXT = Color3.fromRGB(235, 255, 245)

local function notify(msg, t)
	pcall(function() StarterGui:SetCore("SendNotification", {Title="GXScript", Text=msg, Duration=t or 3}) end)
end

local function corner(p, r) local c=Instance.new("UICorner"); c.CornerRadius=UDim.new(0, r or 10); c.Parent=p end
local function stroke(p, th, col, tr) local s=Instance.new("UIStroke"); s.Thickness=th or 1; s.Color=col or Color3.fromRGB(60,60,60); s.Transparency=tr or 0.15; s.ApplyStrokeMode=Enum.ApplyStrokeMode.Border; s.Parent=p end

-- Drag helper
local function makeDraggable(frame)
	local dragging, dragInput, startPos, startInputPos
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			startPos = frame.Position
			startInputPos = input.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then dragging = false end
			end)
		end
	end)
	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then dragInput = input end
	end)
	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - startInputPos
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end

-- ScreenGui
local SG = Instance.new("ScreenGui")
SG.Name = "GXScriptHub"
SG.ResetOnSpawn = false
SG.IgnoreGuiInset = true
SG.Parent = game.CoreGui

----------------------------------------------------------------
-- Splash
----------------------------------------------------------------
local Splash = Instance.new("Frame")
Splash.Size = UDim2.fromScale(1,1)
Splash.BackgroundColor3 = BG
Splash.Parent = SG

local Glow = Instance.new("ImageLabel")
Glow.Size = UDim2.new(0, 600, 0, 600)
Glow.Position = UDim2.new(0.5, -300, 0.5, -300)
Glow.BackgroundTransparency = 1
Glow.Image = "rbxassetid://5028857084" -- soft glow circle
Glow.ImageTransparency = 0.3
Glow.ImageColor3 = ACCENT
Glow.Parent = Splash

local Title = Instance.new("TextLabel")
Title.BackgroundTransparency = 1
Title.Size = UDim2.new(1, 0, 0, 80)
Title.Position = UDim2.new(0, 0, 0.45, 0)
Title.Font = Enum.Font.GothamBlack
Title.Text = "GXScript Hub"
Title.TextColor3 = TEXT
Title.TextSize = 54
Title.Parent = Splash

local Sub = Instance.new("TextLabel")
Sub.BackgroundTransparency = 1
Sub.Size = UDim2.new(1, 0, 0, 24)
Sub.Position = UDim2.new(0, 0, 0.55, 10)
Sub.Font = Enum.Font.Gotham
Sub.Text = "Made by GXScript Hub"
Sub.TextColor3 = Color3.fromRGB(190, 230, 205)
Sub.TextSize = 18
Sub.Parent = Splash

-- Splash animate
Title.TextTransparency = 1
Sub.TextTransparency = 1
Glow.ImageTransparency = 1
TweenService:Create(Title, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency=0}):Play()
TweenService:Create(Sub, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0.1), {TextTransparency=0}):Play()
TweenService:Create(Glow, TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageTransparency=0.3}):Play()

task.delay(1.2, function()
	TweenService:Create(Splash, TweenInfo.new(0.5), {BackgroundTransparency=1}):Play()
	TweenService:Create(Title, TweenInfo.new(0.4), {TextTransparency=1}):Play()
	TweenService:Create(Sub, TweenInfo.new(0.4), {TextTransparency=1}):Play()
	TweenService:Create(Glow, TweenInfo.new(0.4), {ImageTransparency=1}):Play()
	task.wait(0.5)
	Splash:Destroy()
end)

----------------------------------------------------------------
-- Main Window
----------------------------------------------------------------
local Main = Instance.new("Frame")
Main.Size = UDim2.fromOffset(560, 360)
Main.Position = UDim2.new(0.5, -280, 0.5, -180)
Main.BackgroundColor3 = BG
Main.BorderSizePixel = 0
Main.Parent = SG
corner(Main, 16)
stroke(Main, 1.6, Color3.fromRGB(70,70,70), 0.35)

local Top = Instance.new("Frame")
Top.Size = UDim2.new(1, 0, 0, 50)
Top.BackgroundColor3 = BG_SOFT
Top.Parent = Main
corner(Top, 16)
stroke(Top, 1, Color3.fromRGB(80,80,80), 0.25)

local Logo = Instance.new("Frame")
Logo.Size = UDim2.fromOffset(36, 36)
Logo.Position = UDim2.new(0, 10, 0, 7)
Logo.BackgroundColor3 = ACCENT_DARK
Logo.Parent = Top
corner(Logo, 10)
stroke(Logo, 1, ACCENT, 0.2)

local GX = Instance.new("TextLabel")
GX.BackgroundTransparency = 1
GX.Size = UDim2.fromScale(1,1)
GX.Text = "GX"
GX.Font = Enum.Font.GothamBlack
GX.TextSize = 20
GX.TextColor3 = TEXT
GX.Parent = Logo

local TitleSmall = Instance.new("TextLabel")
TitleSmall.BackgroundTransparency = 1
TitleSmall.Size = UDim2.new(1, -120, 1, 0)
TitleSmall.Position = UDim2.new(0, 56, 0, 0)
TitleSmall.TextXAlignment = Enum.TextXAlignment.Left
TitleSmall.Font = Enum.Font.GothamBold
TitleSmall.TextSize = 20
TitleSmall.TextColor3 = TEXT
TitleSmall.Text = "GXScript Hub"
TitleSmall.Parent = Top

local Close = Instance.new("TextButton")
Close.Size = UDim2.fromOffset(36, 36)
Close.Position = UDim2.new(1, -46, 0, 7)
Close.BackgroundColor3 = Color3.fromRGB(160, 35, 35)
Close.Text = "âœ•"
Close.TextColor3 = Color3.fromRGB(255, 205, 205)
Close.Font = Enum.Font.GothamBold
Close.TextSize = 18
Close.Parent = Top
corner(Close, 10)
stroke(Close, 1, Color3.fromRGB(200,80,80), 0.35)
Close.MouseButton1Click:Connect(function() SG:Destroy() end)

-- Tabs
local Tabs = Instance.new("Frame")
Tabs.Size = UDim2.new(1, -20, 0, 42)
Tabs.Position = UDim2.new(0, 10, 0, 60)
Tabs.BackgroundTransparency = 1
Tabs.Parent = Main

local function tabBtn(txt, idx)
	local b = Instance.new("TextButton")
	b.Size = UDim2.fromOffset(128, 36)
	b.Position = UDim2.new(0, (idx-1)*(128+8), 0, 3)
	b.BackgroundColor3 = ACCENT_DARK
	b.Text = txt
	b.TextColor3 = TEXT
	b.Font = Enum.Font.GothamBold
	b.TextSize = 14
	b.Parent = Tabs
	corner(b, 10)
	stroke(b, 1, Color3.fromRGB(90,120,90), 0.25)
	b.MouseEnter:Connect(function() b.BackgroundColor3 = ACCENT end)
	b.MouseLeave:Connect(function() if b:GetAttribute("active") ~= true then b.BackgroundColor3 = ACCENT_DARK end end)
	return b
end

local Pages = Instance.new("Frame")
Pages.Size = UDim2.new(1, -20, 1, -120)
Pages.Position = UDim2.new(0, 10, 0, 106)
Pages.BackgroundColor3 = BG_SOFT
Pages.Parent = Main
corner(Pages, 14)

local function page()
	local p = Instance.new("Frame")
	p.Size = UDim2.fromScale(1,1)
	p.BackgroundTransparency = 1
	p.Visible = false
	p.Parent = Pages
	return p
end

local P_Main = page()
local P_Player = page()
local P_Util = page()
local P_Set = page()

local T_Main = tabBtn("Main", 1)
local T_Player = tabBtn("Player", 2)
local T_Util = tabBtn("Utilities", 3)
local T_Set = tabBtn("Settings", 4)

local function show(pg, btn)
	for _, f in ipairs(Pages:GetChildren()) do if f:IsA("Frame") then f.Visible = false end end
	for _, b in ipairs(Tabs:GetChildren()) do if b:IsA("TextButton") then b:SetAttribute("active", false); b.BackgroundColor3 = ACCENT_DARK end end
	pg.Visible = true
	btn:SetAttribute("active", true)
	btn.BackgroundColor3 = ACCENT
end

show(P_Main, T_Main)

T_Main.MouseButton1Click:Connect(function() show(P_Main, T_Main) end)
T_Player.MouseButton1Click:Connect(function() show(P_Player, T_Player) end)
T_Util.MouseButton1Click:Connect(function() show(P_Util, T_Util) end)
T_Set.MouseButton1Click:Connect(function() show(P_Set, T_Set) end)

----------------------------------------------------------------
-- Main: Spawner
----------------------------------------------------------------
local lbl = Instance.new("TextLabel")
lbl.BackgroundTransparency = 1
lbl.Size = UDim2.new(1, -24, 0, 24)
lbl.Position = UDim2.new(0, 12, 0, 14)
lbl.Font = Enum.Font.Gotham
lbl.TextXAlignment = Enum.TextXAlignment.Left
lbl.TextSize = 14
lbl.TextColor3 = TEXT
lbl.Text = "Spawner (Pets / Eggs / Seeds)"
lbl.Parent = P_Main

local SpawnBtn = Instance.new("TextButton")
SpawnBtn.Size = UDim2.new(0, 260, 0, 40)
SpawnBtn.Position = UDim2.new(0, 12, 0, 48)
SpawnBtn.BackgroundColor3 = ACCENT_DARK
SpawnBtn.Text = "Run Spawner"
SpawnBtn.TextColor3 = TEXT
SpawnBtn.Font = Enum.Font.GothamBold
SpawnBtn.TextSize = 16
SpawnBtn.Parent = P_Main
corner(SpawnBtn, 10); stroke(SpawnBtn, 1, Color3.fromRGB(90,120,90), 0.25)
SpawnBtn.MouseEnter:Connect(function() SpawnBtn.BackgroundColor3 = ACCENT end)
SpawnBtn.MouseLeave:Connect(function() if SpawnBtn.AutoButtonColor ~= false then SpawnBtn.BackgroundColor3 = ACCENT_DARK end end)

SpawnBtn.MouseButton1Click:Connect(function()
	local ok, err = pcall(function()
		local Spawner = loadstring(game:HttpGet("https://gitlab.com/darkiedarkie/dark/-/raw/main/Spawner.lua"))()
		if typeof(Spawner) == "table" and Spawner.Load then
			Spawner.Load()
		else
			-- some builds return a function: call it
			if typeof(Spawner) == "function" then Spawner() end
		end
	end)
	if ok then notify("Spawner loaded.") else notify("Spawner error: "..tostring(err), 5) end
end)

local credit = Instance.new("TextLabel")
credit.BackgroundTransparency = 1
credit.Size = UDim2.new(1, -24, 0, 20)
credit.Position = UDim2.new(0, 12, 1, -28)
credit.Font = Enum.Font.Gotham
credit.TextXAlignment = Enum.TextXAlignment.Left
credit.TextSize = 12
credit.TextColor3 = Color3.fromRGB(180, 220, 190)
credit.Text = "Made by GXScript Hub"
credit.Parent = P_Main

----------------------------------------------------------------
-- Player: WalkSpeed / Jump / Fly / Noclip / Inf Jump
----------------------------------------------------------------
local function group(parent, title, y, h)
	local box = Instance.new("Frame")
	box.Size = UDim2.new(1, -24, 0, h or 110)
	box.Position = UDim2.new(0, 12, 0, y)
	box.BackgroundColor3 = BG
	box.Parent = parent
	corner(box, 12); stroke(box, 1, Color3.fromRGB(70,70,70), 0.25)

	local t = Instance.new("TextLabel")
	t.BackgroundTransparency = 1
	t.Size = UDim2.new(1, -16, 0, 22)
	t.Position = UDim2.new(0, 8, 0, 6)
	t.Font = Enum.Font.GothamBold
	t.TextXAlignment = Enum.TextXAlignment.Left
	t.TextSize = 14
	t.TextColor3 = TEXT
	t.Text = title
	t.Parent = box
	return box
end

local stats = group(P_Player, "Character Stats", 12, 110)

local WS = Instance.new("TextBox")
WS.Size = UDim2.new(0, 100, 0, 30)
WS.Position = UDim2.new(0, 8, 0, 40)
WS.BackgroundColor3 = BG_SOFT
WS.PlaceholderText = "WalkSpeed"
WS.Text = "16"
WS.TextColor3 = TEXT
WS.Font = Enum.Font.Gotham
WS.TextSize = 14
WS.Parent = stats
corner(WS, 8)

local JP = WS:Clone()
JP.Position = UDim2.new(0, 116, 0, 40)
JP.PlaceholderText = "JumpPower"
JP.Text = "50"
JP.Parent = stats

local Apply = Instance.new("TextButton")
Apply.Size = UDim2.new(0, 120, 0, 30)
Apply.Position = UDim2.new(0, 224, 0, 40)
Apply.BackgroundColor3 = ACCENT_DARK
Apply.Text = "Apply"
Apply.TextColor3 = TEXT
Apply.Font = Enum.Font.GothamBold
Apply.TextSize = 14
Apply.Parent = stats
corner(Apply, 8); stroke(Apply, 1, Color3.fromRGB(90,120,90), 0.25)
Apply.MouseEnter:Connect(function() Apply.BackgroundColor3 = ACCENT end)
Apply.MouseLeave:Connect(function() Apply.BackgroundColor3 = ACCENT_DARK end)
Apply.MouseButton1Click:Connect(function()
	local char = LP.Character or LP.CharacterAdded:Wait()
	local hum = char:FindFirstChildWhichIsA("Humanoid")
	if hum then
		hum.WalkSpeed = tonumber(WS.Text) or 16
		hum.JumpPower = tonumber(JP.Text) or 50
		hum.UseJumpPower = true
		notify(("WS=%d, JP=%d"):format(hum.WalkSpeed, hum.JumpPower))
	end
end)

local toggles = group(P_Player, "Movement Toggles", 128, 160)

local function toggleBtn(parent, label, x, y)
	local b = Instance.new("TextButton")
	b.Size = UDim2.new(0, 160, 0, 32)
	b.Position = UDim2.new(0, x, 0, y)
	b.BackgroundColor3 = ACCENT_DARK
	b.Text = label..": OFF"
	b.TextColor3 = TEXT
	b.Font = Enum.Font.GothamBold
	b.TextSize = 13
	b.Parent = parent
	corner(b, 10); stroke(b, 1, Color3.fromRGB(90,120,90), 0.25)
	b:SetAttribute("State", false)
	b.MouseButton1Click:Connect(function()
		local s = not b:GetAttribute("State")
		b:SetAttribute("State", s)
		b.Text = label..": "..(s and "ON" or "OFF")
		b.BackgroundColor3 = s and ACCENT or ACCENT_DARK
	end)
	return b
end

-- Infinite Jump
local IJ = toggleBtn(toggles, "Infinite Jump", 8, 40)
local IJConn
IJ:GetAttributeChangedSignal("State"):Connect(function()
	local on = IJ:GetAttribute("State")
	if on then
		IJConn = UIS.JumpRequest:Connect(function()
			local char = LP.Character
			if char and char:FindFirstChildWhichIsA("Humanoid") then
				char.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end
		end)
	else
		if IJConn then IJConn:Disconnect(); IJConn=nil end
	end
end)

-- Noclip
local NC = toggleBtn(toggles, "Noclip", 176, 40)
local NCConn
NC:GetAttributeChangedSignal("State"):Connect(function()
	local on = NC:GetAttribute("State")
	if on then
		NCConn = RS.Stepped:Connect(function()
			local char = LP.Character
			if not char then return end
			for _,v in ipairs(char:GetDescendants()) do
				if v:IsA("BasePart") then v.CanCollide = false end
			end
		end)
	else
		if NCConn then NCConn:Disconnect(); NCConn=nil end
	end
end)

-- Fly (WASD + Space/Ctrl) with adjustable speed
local FL = toggleBtn(toggles, "Fly", 8, 80)
local SpeedBox = Instance.new("TextBox")
SpeedBox.Size = UDim2.new(0, 80, 0, 32)
SpeedBox.Position = UDim2.new(0, 176, 0, 80)
SpeedBox.BackgroundColor3 = BG_SOFT
SpeedBox.PlaceholderText = "Speed"
SpeedBox.Text = "60"
SpeedBox.TextColor3 = TEXT
SpeedBox.Font = Enum.Font.Gotham
SpeedBox.TextSize = 13
SpeedBox.Parent = toggles
corner(SpeedBox, 8)

local FlyConn, FlyVel, FlyGyro
local function stopFly()
	if FlyConn then FlyConn:Disconnect(); FlyConn=nil end
	if FlyVel then FlyVel:Destroy(); FlyVel=nil end
	if FlyGyro then FlyGyro:Destroy(); FlyGyro=nil end
end

FL:GetAttributeChangedSignal("State"):Connect(function()
	local on = FL:GetAttribute("State")
	local char = LP.Character or LP.CharacterAdded:Wait()
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then notify("No HumanoidRootPart"); FL:SetAttribute("State", false); FL.Text="Fly: OFF"; return end
	if on then
		local spd = tonumber(SpeedBox.Text) or 60
		FlyVel = Instance.new("BodyVelocity")
		FlyVel.MaxForce = Vector3.new(1e6,1e6,1e6)
		FlyVel.Velocity = Vector3.zero
		FlyVel.Parent = hrp
		FlyGyro = Instance.new("BodyGyro")
		FlyGyro.MaxTorque = Vector3.new(1e6,1e6,1e6)
		FlyGyro.CFrame = hrp.CFrame
		FlyGyro.Parent = hrp
		FlyConn = RS.RenderStepped:Connect(function()
			local cam = workspace.CurrentCamera.CFrame
			local move = Vector3.zero
			if UIS:IsKeyDown(Enum.KeyCode.W) then move += cam.LookVector end
			if UIS:IsKeyDown(Enum.KeyCode.S) then move -= cam.LookVector end
			if UIS:IsKeyDown(Enum.KeyCode.A) then move -= cam.RightVector end
			if UIS:IsKeyDown(Enum.KeyCode.D) then move += cam.RightVector end
			if UIS:IsKeyDown(Enum.KeyCode.Space) then move += Vector3.new(0,1,0) end
			if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then move -= Vector3.new(0,1,0) end
			FlyVel.Velocity = (move.Magnitude > 0 and move.Unit or Vector3.zero) * spd
			FlyGyro.CFrame = cam
		end)
	else
		stopFly()
	end
end)

----------------------------------------------------------------
-- Utilities: FPS Booster
----------------------------------------------------------------
local util = group(P_Util, "Performance", 12, 120)

local Boost = Instance.new("TextButton")
Boost.Size = UDim2.new(0, 180, 0, 34)
Boost.Position = UDim2.new(0, 8, 0, 46)
Boost.BackgroundColor3 = ACCENT_DARK
Boost.Text = "Enable FPS Boost"
Boost.TextColor3 = TEXT
Boost.Font = Enum.Font.GothamBold
Boost.TextSize = 14
Boost.Parent = util
corner(Boost, 10)

local Reset = Boost:Clone()
Reset.Position = UDim2.new(0, 200, 0, 46)
Reset.Text = "Reset (partial)"
Reset.Parent = util

Boost.MouseButton1Click:Connect(function()
	pcall(function() settings().Rendering.QualityLevel = Enum.QualityLevel.Level01 end)
	for _,d in ipairs(workspace:GetDescendants()) do
		if d:IsA("BasePart") then d.Material = Enum.Material.SmoothPlastic; d.Reflectance = 0
		elseif d:IsA("Decal") or d:IsA("Texture") then d.Transparency = 1
		elseif d:IsA("ParticleEmitter") or d:IsA("Trail") then d.Enabled = false
		elseif d:IsA("PointLight") or d:IsA("SpotLight") or d:IsA("SurfaceLight") then d.Enabled = false end
	end
	notify("FPS Boost enabled")
end)

Reset.MouseButton1Click:Connect(function()
	for _,d in ipairs(workspace:GetDescendants()) do
		if d:IsA("ParticleEmitter") or d:IsA("Trail") then d.Enabled = true
		elseif d:IsA("PointLight") or d:IsA("SpotLight") or d:IsA("SurfaceLight") then d.Enabled = true end
	end
	notify("Reset attempted (rejoin may be needed)")
end)

----------------------------------------------------------------
-- Settings: Toggle key & theme swatch
----------------------------------------------------------------
local set = group(P_Set, "Settings", 12, 140)

local KeyLbl = Instance.new("TextLabel")
KeyLbl.BackgroundTransparency = 1
KeyLbl.Size = UDim2.new(0, 220, 0, 24)
KeyLbl.Position = UDim2.new(0, 8, 0, 44)
KeyLbl.Font = Enum.Font.Gotham
KeyLbl.TextXAlignment = Enum.TextXAlignment.Left
KeyLbl.TextSize = 14
KeyLbl.TextColor3 = TEXT
KeyLbl.Text = "Toggle UI Key: RightShift"
KeyLbl.Parent = set

UIS.InputBegan:Connect(function(i,g)
	if g then return end
	if i.KeyCode == Enum.KeyCode.RightShift then
		Main.Visible = not Main.Visible
	end
end)

local Swatch = Instance.new("Frame")
Swatch.Size = UDim2.new(0, 110, 0, 30)
Swatch.Position = UDim2.new(0, 8, 0, 78)
Swatch.BackgroundColor3 = ACCENT
Swatch.Parent = set
corner(Swatch, 8)
local sLbl = Instance.new("TextLabel")
sLbl.BackgroundTransparency = 1
sLbl.Size = UDim2.new(1,0,1,0)
sLbl.Text = "Accent"
sLbl.Font = Enum.Font.GothamBold
sLbl.TextSize = 14
sLbl.TextColor3 = TEXT
sLbl.Parent = Swatch

----------------------------------------------------------------
-- Separate Toggle Button (draggable)
----------------------------------------------------------------
local ToggleUI = Instance.new("TextButton")
ToggleUI.Size = UDim2.new(0, 64, 0, 64)
ToggleUI.Position = UDim2.new(0.05, 0, 0.6, 0)
ToggleUI.BackgroundColor3 = ACCENT_DARK
ToggleUI.Text = "GX"
ToggleUI.TextColor3 = TEXT
ToggleUI.Font = Enum.Font.GothamBlack
ToggleUI.TextSize = 20
ToggleUI.Parent = SG
corner(ToggleUI, 18)
stroke(ToggleUI, 1, ACCENT, 0.25)
makeDraggable(ToggleUI)

ToggleUI.MouseButton1Click:Connect(function()
	Main.Visible = not Main.Visible
end)

-- Make main draggable
makeDraggable(Main)

-- Cleanup safety
SG.AncestryChanged:Connect(function(_, parent)
	if not parent then
		if IJConn then IJConn:Disconnect() end
		if NCConn then NCConn:Disconnect() end
		stopFly()
	end
end)

notify("GXScript Hub loaded. Press RightShift to toggle.")
